syntax = "proto3";

package inventory.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/max-kriv0s/go-microservices-edu/shared/pkg/proto/inventory/v1;inventory_v1";

service InventoryService {
    // Возвращает информацию о детали по её UUID.
    rpc GetPart(GetPartRequest) returns (GetPartResponse);
    // Возвращает список деталей с возможностью фильтрации.
    rpc ListParts(ListPartsRequest) returns (ListPartsResponse);
}

// Category - категории товара
enum Category {
    // Неизвестная категория
    UNKNOWN = 0;
    // Двигатель
    ENGINE = 1;
    // Топливо
    FUEL = 2;
    // Иллюминатор
    PORTHOLE = 3;
    // Крыло
    WING = 4;
}

// Dimensions
message Dimensions {
    // Длина в см
    double length = 1;
    // Ширина в см
    double width = 2;
    // Высота в см
    double height = 3;
    // Вес в кг
    double weight = 4;
}

// Manufacturer
message Manufacturer {
    // 	Название
    string name = 1;
    // Страна производства
    string country = 2;
    // Сайт производителя
    string website = 3;
}

// Value - доступные типы значений
message Value {
    oneof value {
        // Строковое значение
        string string_value = 1;
        // Целое значение
        int64 int64_value = 2;
        // Дробное значение
        double double_value = 3;
        // Логическое значение
        bool bool_value = 4;
    }
}

// Part - описание детали
message Part {
    // Уникальный идентификатор детали
    string uuid = 1;
    // Название детали
    string name = 2;
    // Описание детали
    string description = 3;
    // Цена за единицу
    double price = 4;
    // Количество на складе
    int64 stock_quantity = 5;
    // Категория
    Category category = 6;
    // Размеры детали
    Dimensions dimensions = 7;
    // Информация о производителе
    Manufacturer manufacturer = 8;
    // Теги для быстрого поиска
    repeated string tags = 9;
    // Гибкие метаданные
    map<string, Value> metadata = 10;
    // Дата создания
    google.protobuf.Timestamp created_at = 11;
    // Дата обновления
    google.protobuf.Timestamp updated_at = 12;
}

// PartsFilter - фильтр поиска деталей
message PartsFilter {
    // Список UUID'ов. Пусто — не фильтруем по UUID
    repeated string uuids = 1;
    // Список имён. Пусто — не фильтруем по имени
    repeated string names = 2;
    // Список категорий. Пусто — не фильтруем по категории
    repeated Category categories = 3;
    // Список стран производителей. Пусто — не фильтруем по стране
    repeated string manufacturer_countries = 4;
    // Список тегов. Пусто — не фильтруем по тегам
    repeated string tags = 5;
}

// GetPartRequest - запрос
message GetPartRequest {
    // Идентификатор детали
    string uuid = 1;
}

// GetPartResponse - ответ
message GetPartResponse {
    // Информация о детали
    Part part = 1;
}

// ListPartsRequest - запрос
message ListPartsRequest {
    // Фильтр по деталям (все поля опциональны)
    PartsFilter filter = 1;
}

// ListPartsResponse - ответ
message ListPartsResponse {
    // Список найденных деталей
    repeated Part parts = 1;
}
